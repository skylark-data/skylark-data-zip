/**
 * skylark-jszip - A skylark wrapper for jszip.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(["../utils","./ConvertWorker","./GenericWorker","../base64","../support","../external"],function(r,e,t,n,o,u){"use strict";function a(e,t){return new u.Promise(function(o,u){var a=[],i=e._internalType,s=e._outputType,c=e._mimeType;e.on("data",function(r,e){a.push(r),t&&t(e)}).on("error",function(r){a=[],u(r)}).on("end",function(){try{var e=function(e,t,o){switch(e){case"blob":return r.newBlob(r.transformTo("arraybuffer",t),o);case"base64":return n.encode(t);default:return r.transformTo(e,t)}}(s,function(r,e){var t,n=0,o=null,u=0;for(t=0;t<e.length;t++)u+=e[t].length;switch(r){case"string":return e.join("");case"array":return Array.prototype.concat.apply([],e);case"uint8array":for(o=new Uint8Array(u),t=0;t<e.length;t++)o.set(e[t],n),n+=e[t].length;return o;case"nodebuffer":return Buffer.concat(e);default:throw new Error("concat : unsupported type '"+r+"'")}}(i,a),c);o(e)}catch(r){u(r)}a=[]}).resume()})}function i(n,o,u){var a=o;switch(o){case"blob":case"arraybuffer":a="uint8array";break;case"base64":a="string"}try{this._internalType=a,this._outputType=o,this._mimeType=u,r.checkSupport(a),this._worker=n.pipe(new e(a)),n.lock()}catch(r){this._worker=new t("error"),this._worker.error(r)}}return i.prototype={accumulate:function(r){return a(this,r)},on:function(e,t){var n=this;return"data"===e?this._worker.on(e,function(r){t.call(n,r.data,r.meta)}):this._worker.on(e,function(){r.delay(t,arguments,n)}),this},resume:function(){return r.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(e){if(r.checkSupport("nodestream"),"nodebuffer"!==this._outputType)throw new Error(this._outputType+" is not supported by this method");return new NodejsStreamOutputAdapter(this,{objectMode:"nodebuffer"!==this._outputType},e)}},i});
//# sourceMappingURL=../sourcemaps/stream/StreamHelper.js.map
