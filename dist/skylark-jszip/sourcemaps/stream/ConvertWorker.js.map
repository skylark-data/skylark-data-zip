{"version":3,"sources":["stream/ConvertWorker.js"],"names":["define","GenericWorker","utils","ConvertWorker","destType","call","this","inherits","prototype","processChunk","chunk","push","data","transformTo","meta"],"mappings":";;;;;;;AAAAA,QACI,kBACA,YACD,SAAUC,EAAeC,GACxB,aAEA,SAASC,EAAcC,GACnBH,EAAcI,KAAKC,KAAM,oBAAsBF,GAC/CE,KAAKF,SAAWA,EAUpB,OARAF,EAAMK,SAASJ,EAAeF,GAC9BE,EAAcK,UAAUC,aAAe,SAAUC,GAC7CJ,KAAKK,MACDC,KAAMV,EAAMW,YAAYP,KAAKF,SAAUM,EAAME,MAC7CE,KAAMJ,EAAMI,QAIbX","file":"../../stream/ConvertWorker.js","sourcesContent":["define([\n    './GenericWorker',\n    '../utils'\n], function (GenericWorker, utils) {\n    'use strict';\n\n    function ConvertWorker(destType) {\n        GenericWorker.call(this, 'ConvertWorker to ' + destType);\n        this.destType = destType;\n    }\n    utils.inherits(ConvertWorker, GenericWorker);\n    ConvertWorker.prototype.processChunk = function (chunk) {\n        this.push({\n            data: utils.transformTo(this.destType, chunk.data),\n            meta: chunk.meta\n        });\n    };\n\n    return ConvertWorker;\n\n});"]}