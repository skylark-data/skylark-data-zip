{"version":3,"sources":["stream/DataLengthProbe.js"],"names":["define","utils","GenericWorker","DataLengthProbe","propName","call","this","withStreamInfo","inherits","prototype","processChunk","chunk","length","streamInfo","data"],"mappings":";;;;;;;AAAAA,QACI,WACA,mBACD,SAAUC,EAAOC,GAChB,aAEA,SAASC,EAAgBC,GACrBF,EAAcG,KAAKC,KAAM,uBAAyBF,GAClDE,KAAKF,SAAWA,EAChBE,KAAKC,eAAeH,EAAU,GAUlC,OARAH,EAAMO,SAASL,EAAiBD,GAChCC,EAAgBM,UAAUC,aAAe,SAAUC,GAC/C,GAAIA,EAAO,CACP,IAAIC,EAASN,KAAKO,WAAWP,KAAKF,WAAa,EAC/CE,KAAKO,WAAWP,KAAKF,UAAYQ,EAASD,EAAMG,KAAKF,OAEzDV,EAAcO,UAAUC,aAAaL,KAAKC,KAAMK,IAE7CR","file":"../../stream/DataLengthProbe.js","sourcesContent":["define([\n    '../utils',\n    './GenericWorker'\n], function (utils, GenericWorker) {\n    'use strict';\n\n    function DataLengthProbe(propName) {\n        GenericWorker.call(this, 'DataLengthProbe for ' + propName);\n        this.propName = propName;\n        this.withStreamInfo(propName, 0);\n    }\n    utils.inherits(DataLengthProbe, GenericWorker);\n    DataLengthProbe.prototype.processChunk = function (chunk) {\n        if (chunk) {\n            var length = this.streamInfo[this.propName] || 0;\n            this.streamInfo[this.propName] = length + chunk.data.length;\n        }\n        GenericWorker.prototype.processChunk.call(this, chunk);\n    };\n    return DataLengthProbe;\n\n});"]}