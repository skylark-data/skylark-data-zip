{"version":3,"sources":["generate.js"],"names":["define","compressions","ZipFileWorker","getCompression","fileCompression","zipCompression","compressionName","compression","Error","zip","options","comment","zipFileWorker","streamFiles","platform","encodeFileName","entriesCount","forEach","relativePath","file","compressionOptions","dir","date","_compressWorker","withStreamInfo","name","unixPermissions","dosPermissions","pipe","e","error"],"mappings":";;;;;;;AAAAA,QACI,iBACA,4BACD,SAAUC,EAAcC,GACvB,aAEA,IAAIC,EAAiB,SAAUC,EAAiBC,GAC5C,IAAIC,EAAkBF,GAAmBC,EACrCE,EAAcN,EAAaK,GAC/B,IAAKC,EACD,MAAM,IAAIC,MAAMF,EAAkB,wCAEtC,OAAOC,GA2BX,OAzBA,SAAwBE,EAAKC,EAASC,GAClC,IAAIC,EAAgB,IAAIV,EAAcQ,EAAQG,YAAaF,EAASD,EAAQI,SAAUJ,EAAQK,gBAC1FC,EAAe,EACnB,IACIP,EAAIQ,QAAQ,SAAUC,EAAcC,GAChCH,IACA,IAAIT,EAAcJ,EAAegB,EAAKT,QAAQH,YAAaG,EAAQH,aAC/Da,EAAqBD,EAAKT,QAAQU,oBAAsBV,EAAQU,uBAChEC,EAAMF,EAAKE,IAAKC,EAAOH,EAAKG,KAChCH,EAAKI,gBAAgBhB,EAAaa,GAAoBI,eAAe,QACjEC,KAAMP,EACNG,IAAKA,EACLC,KAAMA,EACNX,QAASQ,EAAKR,SAAW,GACzBe,gBAAiBP,EAAKO,gBACtBC,eAAgBR,EAAKQ,iBACtBC,KAAKhB,KAEZA,EAAcI,aAAeA,EAC/B,MAAOa,GACLjB,EAAckB,MAAMD,GAExB,OAAOjB","file":"../generate.js","sourcesContent":["define([\r\n    './compressions',\r\n    './generate/ZipFileWorker'\r\n], function (compressions, ZipFileWorker) {\r\n    'use strict';\r\n\r\n    var getCompression = function (fileCompression, zipCompression) {\r\n        var compressionName = fileCompression || zipCompression;\r\n        var compression = compressions[compressionName];\r\n        if (!compression) {\r\n            throw new Error(compressionName + ' is not a valid compression method !');\r\n        }\r\n        return compression;\r\n    };\r\n    function generateWorker(zip, options, comment) {\r\n        var zipFileWorker = new ZipFileWorker(options.streamFiles, comment, options.platform, options.encodeFileName);\r\n        var entriesCount = 0;\r\n        try {\r\n            zip.forEach(function (relativePath, file) {\r\n                entriesCount++;\r\n                var compression = getCompression(file.options.compression, options.compression);\r\n                var compressionOptions = file.options.compressionOptions || options.compressionOptions || {};\r\n                var dir = file.dir, date = file.date;\r\n                file._compressWorker(compression, compressionOptions).withStreamInfo('file', {\r\n                    name: relativePath,\r\n                    dir: dir,\r\n                    date: date,\r\n                    comment: file.comment || '',\r\n                    unixPermissions: file.unixPermissions,\r\n                    dosPermissions: file.dosPermissions\r\n                }).pipe(zipFileWorker);\r\n            });\r\n            zipFileWorker.entriesCount = entriesCount;\r\n        } catch (e) {\r\n            zipFileWorker.error(e);\r\n        }\r\n        return zipFileWorker;\r\n    };\r\n\r\n    return generateWorker;\r\n\r\n});"]}