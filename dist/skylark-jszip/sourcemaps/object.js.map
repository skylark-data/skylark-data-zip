{"version":3,"sources":["object.js"],"names":["define","utf8","utils","GenericWorker","StreamHelper","defaults","CompressedObject","ZipObject","generate","fileAdd","name","data","originalOptions","parent","dataType","getTypeOf","o","extend","date","Date","compression","toUpperCase","unixPermissions","parseInt","dir","dosPermissions","forceTrailingSlash","createFolders","parentFolder","folderAdd","call","this","isUnicodeString","binary","base64","uncompressedSize","length","zipObjectContent","prepareContent","optimizedBinaryString","object","files","path","slice","substring","lastSlash","lastIndexOf","isRegExp","Object","prototype","toString","load","Error","forEach","cb","filename","relativePath","file","root","filter","search","result","entry","push","arguments","regexp","test","obj","folder","arg","newFolder","ret","clone","remove","kids","i","generateInternalStream","options","worker","opts","streamFiles","compressionOptions","type","platform","comment","mimeType","encodeFileName","utf8encode","toLowerCase","checkSupport","generateWorker","e","error","generateAsync","onUpdate","accumulate","generateNodeStream","toNodejsStream"],"mappings":"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","file":"../object.js","sourcesContent":["define([\n    './utf8',\n    './utils',\n    './stream/GenericWorker',\n    './stream/StreamHelper',\n    './defaults',\n    './compressedObject',\n    './zipObject',\n    './generate'\n], function (utf8, utils, GenericWorker, StreamHelper, defaults, CompressedObject, ZipObject, generate) {\n    'use strict';\n\n    var fileAdd = function (name, data, originalOptions) {\n        var dataType = utils.getTypeOf(data), parent;\n        var o = utils.extend(originalOptions || {}, defaults);\n        o.date = o.date || new Date();\n        if (o.compression !== null) {\n            o.compression = o.compression.toUpperCase();\n        }\n        if (typeof o.unixPermissions === 'string') {\n            o.unixPermissions = parseInt(o.unixPermissions, 8);\n        }\n        if (o.unixPermissions && o.unixPermissions & 16384) {\n            o.dir = true;\n        }\n        if (o.dosPermissions && o.dosPermissions & 16) {\n            o.dir = true;\n        }\n        if (o.dir) {\n            name = forceTrailingSlash(name);\n        }\n        if (o.createFolders && (parent = parentFolder(name))) {\n            folderAdd.call(this, parent, true);\n        }\n        var isUnicodeString = dataType === 'string' && o.binary === false && o.base64 === false;\n        if (!originalOptions || typeof originalOptions.binary === 'undefined') {\n            o.binary = !isUnicodeString;\n        }\n        var isCompressedEmpty = data instanceof CompressedObject && data.uncompressedSize === 0;\n        if (isCompressedEmpty || o.dir || !data || data.length === 0) {\n            o.base64 = false;\n            o.binary = true;\n            data = '';\n            o.compression = 'STORE';\n            dataType = 'string';\n        }\n        var zipObjectContent = null;\n        if (data instanceof CompressedObject || data instanceof GenericWorker) {\n            zipObjectContent = data;\n        ///} else if (nodejsUtils.isNode && nodejsUtils.isStream(data)) {\n        ///    zipObjectContent = new NodejsStreamInputAdapter(name, data);\n        } else {\n            zipObjectContent = utils.prepareContent(name, data, o.binary, o.optimizedBinaryString, o.base64);\n        }\n        var object = new ZipObject(name, zipObjectContent, o);\n        this.files[name] = object;\n    };\n    var parentFolder = function (path) {\n        if (path.slice(-1) === '/') {\n            path = path.substring(0, path.length - 1);\n        }\n        var lastSlash = path.lastIndexOf('/');\n        return lastSlash > 0 ? path.substring(0, lastSlash) : '';\n    };\n    var forceTrailingSlash = function (path) {\n        if (path.slice(-1) !== '/') {\n            path += '/';\n        }\n        return path;\n    };\n    var folderAdd = function (name, createFolders) {\n        createFolders = typeof createFolders !== 'undefined' ? createFolders : defaults.createFolders;\n        name = forceTrailingSlash(name);\n        if (!this.files[name]) {\n            fileAdd.call(this, name, null, {\n                dir: true,\n                createFolders: createFolders\n            });\n        }\n        return this.files[name];\n    };\n    function isRegExp(object) {\n        return Object.prototype.toString.call(object) === '[object RegExp]';\n    }\n    var out = {\n        load: function () {\n            throw new Error('This method has been removed in JSZip 3.0, please check the upgrade guide.');\n        },\n        forEach: function (cb) {\n            var filename, relativePath, file;\n            for (filename in this.files) {\n                file = this.files[filename];\n                relativePath = filename.slice(this.root.length, filename.length);\n                if (relativePath && filename.slice(0, this.root.length) === this.root) {\n                    cb(relativePath, file);\n                }\n            }\n        },\n        filter: function (search) {\n            var result = [];\n            this.forEach(function (relativePath, entry) {\n                if (search(relativePath, entry)) {\n                    result.push(entry);\n                }\n            });\n            return result;\n        },\n        file: function (name, data, o) {\n            if (arguments.length === 1) {\n                if (isRegExp(name)) {\n                    var regexp = name;\n                    return this.filter(function (relativePath, file) {\n                        return !file.dir && regexp.test(relativePath);\n                    });\n                } else {\n                    var obj = this.files[this.root + name];\n                    if (obj && !obj.dir) {\n                        return obj;\n                    } else {\n                        return null;\n                    }\n                }\n            } else {\n                name = this.root + name;\n                fileAdd.call(this, name, data, o);\n            }\n            return this;\n        },\n        folder: function (arg) {\n            if (!arg) {\n                return this;\n            }\n            if (isRegExp(arg)) {\n                return this.filter(function (relativePath, file) {\n                    return file.dir && arg.test(relativePath);\n                });\n            }\n            var name = this.root + arg;\n            var newFolder = folderAdd.call(this, name);\n            var ret = this.clone();\n            ret.root = newFolder.name;\n            return ret;\n        },\n        remove: function (name) {\n            name = this.root + name;\n            var file = this.files[name];\n            if (!file) {\n                if (name.slice(-1) !== '/') {\n                    name += '/';\n                }\n                file = this.files[name];\n            }\n            if (file && !file.dir) {\n                delete this.files[name];\n            } else {\n                var kids = this.filter(function (relativePath, file) {\n                    return file.name.slice(0, name.length) === name;\n                });\n                for (var i = 0; i < kids.length; i++) {\n                    delete this.files[kids[i].name];\n                }\n            }\n            return this;\n        },\n        generate: function () {\n            throw new Error('This method has been removed in JSZip 3.0, please check the upgrade guide.');\n        },\n        generateInternalStream: function (options) {\n            var worker, opts = {};\n            try {\n                opts = utils.extend(options || {}, {\n                    streamFiles: false,\n                    compression: 'STORE',\n                    compressionOptions: null,\n                    type: '',\n                    platform: 'DOS',\n                    comment: null,\n                    mimeType: 'application/zip',\n                    encodeFileName: utf8.utf8encode\n                });\n                opts.type = opts.type.toLowerCase();\n                opts.compression = opts.compression.toUpperCase();\n                if (opts.type === 'binarystring') {\n                    opts.type = 'string';\n                }\n                if (!opts.type) {\n                    throw new Error('No output type specified.');\n                }\n                utils.checkSupport(opts.type);\n                if (opts.platform === 'darwin' || opts.platform === 'freebsd' || opts.platform === 'linux' || opts.platform === 'sunos') {\n                    opts.platform = 'UNIX';\n                }\n                if (opts.platform === 'win32') {\n                    opts.platform = 'DOS';\n                }\n                var comment = opts.comment || this.comment || '';\n                worker = generate.generateWorker(this, opts, comment);\n            } catch (e) {\n                worker = new GenericWorker('error');\n                worker.error(e);\n            }\n            return new StreamHelper(worker, opts.type || 'string', opts.mimeType);\n        },\n        generateAsync: function (options, onUpdate) {\n            return this.generateInternalStream(options).accumulate(onUpdate);\n        },\n        generateNodeStream: function (options, onUpdate) {\n            options = options || {};\n            if (!options.type) {\n                options.type = 'nodebuffer';\n            }\n            return this.generateInternalStream(options).toNodejsStream(onUpdate);\n        }\n    };\n\n    return out;\n\n});"]}