{"version":3,"sources":["crc32.js"],"names":["define","utils","crcTable","c","table","n","k","makeTable","input","crc","length","getTypeOf","buf","len","pos","t","end","i","crc32","str","charCodeAt","crc32str"],"mappings":";;;;;;;AAAAA,QAAQ,WAAY,SAAUC,GAC1B,aAaA,IAAIC,EAXJ,WAEI,IADA,IAAIC,EAAGC,KACEC,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1BF,EAAIE,EACJ,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnBH,EAAQ,EAAJA,EAAQ,WAAaA,IAAM,EAAIA,IAAM,EAE7CC,EAAMC,GAAKF,EAEf,OAAOC,EAEIG,GA6Bf,OAZA,SAAsBC,EAAOC,GACzB,YAAqB,IAAVD,GAA0BA,EAAME,OAGF,WAA3BT,EAAMU,UAAUH,GApBlC,SAAeC,EAAKG,EAAKC,EAAKC,GAC1B,IAAIC,EAAIb,EAAUc,EAAMF,EAAMD,EAC9BJ,IAAa,EACb,IAAK,IAAIQ,EAAIH,EAAKG,EAAID,EAAKC,IACvBR,EAAMA,IAAQ,EAAIM,EAAmB,KAAhBN,EAAMG,EAAIK,KAEnC,OAAc,EAAPR,EAgBIS,CAAY,EAANT,EAASD,EAAOA,EAAME,OAAQ,GAdnD,SAAkBD,EAAKU,EAAKN,EAAKC,GAC7B,IAAIC,EAAIb,EAAUc,EAAMF,EAAMD,EAC9BJ,IAAa,EACb,IAAK,IAAIQ,EAAIH,EAAKG,EAAID,EAAKC,IACvBR,EAAMA,IAAQ,EAAIM,EAA8B,KAA3BN,EAAMU,EAAIC,WAAWH,KAE9C,OAAc,EAAPR,EAUIY,CAAe,EAANZ,EAASD,EAAOA,EAAME,OAAQ,GANvC","file":"../crc32.js","sourcesContent":["define(['./utils'], function (utils) {\n    'use strict';\n\n    function makeTable() {\n        var c, table = [];\n        for (var n = 0; n < 256; n++) {\n            c = n;\n            for (var k = 0; k < 8; k++) {\n                c = c & 1 ? 3988292384 ^ c >>> 1 : c >>> 1;\n            }\n            table[n] = c;\n        }\n        return table;\n    }\n    var crcTable = makeTable();\n    function crc32(crc, buf, len, pos) {\n        var t = crcTable, end = pos + len;\n        crc = crc ^ -1;\n        for (var i = pos; i < end; i++) {\n            crc = crc >>> 8 ^ t[(crc ^ buf[i]) & 255];\n        }\n        return crc ^ -1;\n    }\n    function crc32str(crc, str, len, pos) {\n        var t = crcTable, end = pos + len;\n        crc = crc ^ -1;\n        for (var i = pos; i < end; i++) {\n            crc = crc >>> 8 ^ t[(crc ^ str.charCodeAt(i)) & 255];\n        }\n        return crc ^ -1;\n    }\n    function crc32wrapper(input, crc) {\n        if (typeof input === 'undefined' || !input.length) {\n            return 0;\n        }\n        var isArray = utils.getTypeOf(input) !== 'string';\n        if (isArray) {\n            return crc32(crc | 0, input, input.length, 0);\n        } else {\n            return crc32str(crc | 0, input, input.length, 0);\n        }\n    }\n\n    return crc32wrapper;\n});"]}