{"version":3,"sources":["reader/Uint8ArrayReader.js"],"names":["define","ArrayReader","utils","Uint8ArrayReader","data","call","this","inherits","prototype","readData","size","checkOffset","Uint8Array","result","subarray","zero","index"],"mappings":";;;;;;;AAAAA,QACI,gBACA,YACD,SAAUC,EAAaC,GACtB,aAEA,SAASC,EAAiBC,GACtBH,EAAYI,KAAKC,KAAMF,GAY3B,OAVAF,EAAMK,SAASJ,EAAkBF,GACjCE,EAAiBK,UAAUC,SAAW,SAAUC,GAE5C,GADAJ,KAAKK,YAAYD,GACJ,IAATA,EACA,OAAO,IAAIE,WAAW,GAE1B,IAAIC,EAASP,KAAKF,KAAKU,SAASR,KAAKS,KAAOT,KAAKU,MAAOV,KAAKS,KAAOT,KAAKU,MAAQN,GAEjF,OADAJ,KAAKU,OAASN,EACPG,GAEJV","file":"../../reader/Uint8ArrayReader.js","sourcesContent":["define([\n    './ArrayReader',\n    '../utils'\n], function (ArrayReader, utils) {\n    'use strict';\n\n    function Uint8ArrayReader(data) {\n        ArrayReader.call(this, data);\n    }\n    utils.inherits(Uint8ArrayReader, ArrayReader);\n    Uint8ArrayReader.prototype.readData = function (size) {\n        this.checkOffset(size);\n        if (size === 0) {\n            return new Uint8Array(0);\n        }\n        var result = this.data.subarray(this.zero + this.index, this.zero + this.index + size);\n        this.index += size;\n        return result;\n    };\n    return Uint8ArrayReader;\n\n});"]}