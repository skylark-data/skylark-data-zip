{"version":3,"sources":["reader/ArrayReader.js"],"names":["define","DataReader","utils","ArrayReader","data","call","this","i","length","inherits","prototype","byteAt","zero","lastIndexOfSignature","sig","sig0","charCodeAt","sig1","sig2","sig3","readAndCheckSignature","readData","size","checkOffset","result","slice","index"],"mappings":";;;;;;;AAAAA,QACI,eACA,YACD,SAAUC,EAAYC,GACrB,aAEA,SAASC,EAAYC,GACjBH,EAAWI,KAAKC,KAAMF,GACtB,IAAK,IAAIG,EAAI,EAAGA,EAAID,KAAKF,KAAKI,OAAQD,IAClCH,EAAKG,GAAe,IAAVH,EAAKG,GA+BvB,OA5BAL,EAAMO,SAASN,EAAaF,GAC5BE,EAAYO,UAAUC,OAAS,SAAUJ,GACrC,OAAOD,KAAKF,KAAKE,KAAKM,KAAOL,IAEjCJ,EAAYO,UAAUG,qBAAuB,SAAUC,GAEnD,IADA,IAAIC,EAAOD,EAAIE,WAAW,GAAIC,EAAOH,EAAIE,WAAW,GAAIE,EAAOJ,EAAIE,WAAW,GAAIG,EAAOL,EAAIE,WAAW,GAC/FT,EAAID,KAAKE,OAAS,EAAGD,GAAK,IAAKA,EACpC,GAAID,KAAKF,KAAKG,KAAOQ,GAAQT,KAAKF,KAAKG,EAAI,KAAOU,GAAQX,KAAKF,KAAKG,EAAI,KAAOW,GAAQZ,KAAKF,KAAKG,EAAI,KAAOY,EACxG,OAAOZ,EAAID,KAAKM,KAGxB,OAAQ,GAEZT,EAAYO,UAAUU,sBAAwB,SAAUN,GACpD,IAAIC,EAAOD,EAAIE,WAAW,GAAIC,EAAOH,EAAIE,WAAW,GAAIE,EAAOJ,EAAIE,WAAW,GAAIG,EAAOL,EAAIE,WAAW,GAAIZ,EAAOE,KAAKe,SAAS,GACjI,OAAON,IAASX,EAAK,IAAMa,IAASb,EAAK,IAAMc,IAASd,EAAK,IAAMe,IAASf,EAAK,IAErFD,EAAYO,UAAUW,SAAW,SAAUC,GAEvC,GADAhB,KAAKiB,YAAYD,GACJ,IAATA,EACA,SAEJ,IAAIE,EAASlB,KAAKF,KAAKqB,MAAMnB,KAAKM,KAAON,KAAKoB,MAAOpB,KAAKM,KAAON,KAAKoB,MAAQJ,GAE9E,OADAhB,KAAKoB,OAASJ,EACPE,GAIJrB","file":"../../reader/ArrayReader.js","sourcesContent":["define([\n    './DataReader',\n    '../utils'\n], function (DataReader, utils) {\n    'use strict';\n\n    function ArrayReader(data) {\n        DataReader.call(this, data);\n        for (var i = 0; i < this.data.length; i++) {\n            data[i] = data[i] & 255;\n        }\n    }\n    utils.inherits(ArrayReader, DataReader);\n    ArrayReader.prototype.byteAt = function (i) {\n        return this.data[this.zero + i];\n    };\n    ArrayReader.prototype.lastIndexOfSignature = function (sig) {\n        var sig0 = sig.charCodeAt(0), sig1 = sig.charCodeAt(1), sig2 = sig.charCodeAt(2), sig3 = sig.charCodeAt(3);\n        for (var i = this.length - 4; i >= 0; --i) {\n            if (this.data[i] === sig0 && this.data[i + 1] === sig1 && this.data[i + 2] === sig2 && this.data[i + 3] === sig3) {\n                return i - this.zero;\n            }\n        }\n        return -1;\n    };\n    ArrayReader.prototype.readAndCheckSignature = function (sig) {\n        var sig0 = sig.charCodeAt(0), sig1 = sig.charCodeAt(1), sig2 = sig.charCodeAt(2), sig3 = sig.charCodeAt(3), data = this.readData(4);\n        return sig0 === data[0] && sig1 === data[1] && sig2 === data[2] && sig3 === data[3];\n    };\n    ArrayReader.prototype.readData = function (size) {\n        this.checkOffset(size);\n        if (size === 0) {\n            return [];\n        }\n        var result = this.data.slice(this.zero + this.index, this.zero + this.index + size);\n        this.index += size;\n        return result;\n    };\n\n\n    return ArrayReader;\n\n});"]}