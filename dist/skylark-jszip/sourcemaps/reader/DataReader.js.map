{"version":3,"sources":["reader/DataReader.js"],"names":["define","utils","DataReader","data","this","length","index","zero","prototype","checkOffset","offset","checkIndex","newIndex","Error","setIndex","skip","n","byteAt","readInt","size","i","result","readString","transformTo","readData","lastIndexOfSignature","readAndCheckSignature","readDate","dostime","Date","UTC"],"mappings":";;;;;;;AAAAA,QAAQ,YAAa,SAAUC,GAC3B,aAEA,SAASC,EAAWC,GAChBC,KAAKD,KAAOA,EACZC,KAAKC,OAASF,EAAKE,OACnBD,KAAKE,MAAQ,EACbF,KAAKG,KAAO,EA2ChB,OAzCAL,EAAWM,WACPC,YAAa,SAAUC,GACnBN,KAAKO,WAAWP,KAAKE,MAAQI,IAEjCC,WAAY,SAAUC,GAClB,GAAIR,KAAKC,OAASD,KAAKG,KAAOK,GAAYA,EAAW,EACjD,MAAM,IAAIC,MAAM,sCAAwCT,KAAKC,OAAS,mBAAqBO,EAAW,uBAG9GE,SAAU,SAAUF,GAChBR,KAAKO,WAAWC,GAChBR,KAAKE,MAAQM,GAEjBG,KAAM,SAAUC,GACZZ,KAAKU,SAASV,KAAKE,MAAQU,IAE/BC,OAAQ,aAERC,QAAS,SAAUC,GACf,IAAgBC,EAAZC,EAAS,EAEb,IADAjB,KAAKK,YAAYU,GACZC,EAAIhB,KAAKE,MAAQa,EAAO,EAAGC,GAAKhB,KAAKE,MAAOc,IAC7CC,GAAUA,GAAU,GAAKjB,KAAKa,OAAOG,GAGzC,OADAhB,KAAKE,OAASa,EACPE,GAEXC,WAAY,SAAUH,GAClB,OAAOlB,EAAMsB,YAAY,SAAUnB,KAAKoB,SAASL,KAErDK,SAAU,aAEVC,qBAAsB,aAEtBC,sBAAuB,aAEvBC,SAAU,WACN,IAAIC,EAAUxB,KAAKc,QAAQ,GAC3B,OAAO,IAAIW,KAAKA,KAAKC,IAA4B,MAAvBF,GAAW,GAAK,MAAcA,GAAW,GAAK,IAAM,EAAGA,GAAW,GAAK,GAAIA,GAAW,GAAK,GAAIA,GAAW,EAAI,IAAe,GAAVA,IAAiB,MAG/J1B","file":"../../reader/DataReader.js","sourcesContent":["define(['../utils'], function (utils) {\n    'use strict';\n\n    function DataReader(data) {\n        this.data = data;\n        this.length = data.length;\n        this.index = 0;\n        this.zero = 0;\n    }\n    DataReader.prototype = {\n        checkOffset: function (offset) {\n            this.checkIndex(this.index + offset);\n        },\n        checkIndex: function (newIndex) {\n            if (this.length < this.zero + newIndex || newIndex < 0) {\n                throw new Error('End of data reached (data length = ' + this.length + ', asked index = ' + newIndex + '). Corrupted zip ?');\n            }\n        },\n        setIndex: function (newIndex) {\n            this.checkIndex(newIndex);\n            this.index = newIndex;\n        },\n        skip: function (n) {\n            this.setIndex(this.index + n);\n        },\n        byteAt: function () {\n        },\n        readInt: function (size) {\n            var result = 0, i;\n            this.checkOffset(size);\n            for (i = this.index + size - 1; i >= this.index; i--) {\n                result = (result << 8) + this.byteAt(i);\n            }\n            this.index += size;\n            return result;\n        },\n        readString: function (size) {\n            return utils.transformTo('string', this.readData(size));\n        },\n        readData: function () {\n        },\n        lastIndexOfSignature: function () {\n        },\n        readAndCheckSignature: function () {\n        },\n        readDate: function () {\n            var dostime = this.readInt(4);\n            return new Date(Date.UTC((dostime >> 25 & 127) + 1980, (dostime >> 21 & 15) - 1, dostime >> 16 & 31, dostime >> 11 & 31, dostime >> 5 & 63, (dostime & 31) << 1));\n        }\n    };\n    return DataReader;\n});"]}