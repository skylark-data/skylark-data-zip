{"version":3,"sources":["reader/readerFor.js"],"names":["define","utils","support","ArrayReader","StringReader","NodeBufferReader","Uint8ArrayReader","data","type","getTypeOf","checkSupport","uint8array","transformTo"],"mappings":";;;;;;;AAAAA,QACI,WACA,aACA,gBACA,iBACA,qBACA,sBACD,SAAUC,EAAOC,EAASC,EAAaC,EAAcC,EAAkBC,GACtE,aAiBA,OAfA,SAAmBC,GACf,IAAIC,EAAOP,EAAMQ,UAAUF,GAE3B,OADAN,EAAMS,aAAaF,GACN,WAATA,GAAsBN,EAAQS,WAGrB,eAATH,EACO,IAAIH,EAAiBE,GAE5BL,EAAQS,WACD,IAAIL,EAAiBL,EAAMW,YAAY,aAAcL,IAEzD,IAAIJ,EAAYF,EAAMW,YAAY,QAASL,IARvC,IAAIH,EAAaG","file":"../../reader/readerFor.js","sourcesContent":["define([\n    '../utils',\n    '../support',\n    './ArrayReader',\n    './StringReader',\n    './NodeBufferReader',\n    './Uint8ArrayReader'\n], function (utils, support, ArrayReader, StringReader, NodeBufferReader, Uint8ArrayReader) {\n    'use strict';\n\n    function readerFor(data) {\n        var type = utils.getTypeOf(data);\n        utils.checkSupport(type);\n        if (type === 'string' && !support.uint8array) {\n            return new StringReader(data);\n        }\n        if (type === 'nodebuffer') {\n            return new NodeBufferReader(data);\n        }\n        if (support.uint8array) {\n            return new Uint8ArrayReader(utils.transformTo('uint8array', data));\n        }\n        return new ArrayReader(utils.transformTo('array', data));\n    }\n\n    return readerFor;\n});"]}