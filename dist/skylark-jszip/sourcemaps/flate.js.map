{"version":3,"sources":["flate.js"],"names":["define","pako","utils","GenericWorker","ARRAY_TYPE","Uint8Array","Uint16Array","Uint32Array","flate","FlateWorker","action","options","call","this","_pako","_pakoAction","_pakoOptions","meta","magic","inherits","prototype","processChunk","chunk","_createPako","push","transformTo","data","flush","cleanUp","raw","level","self","onData","compressWorker","compressionOptions","uncompressWorker"],"mappings":";;;;;;;AAAAA,QACI,eACA,UACA,0BACD,SAAUC,EAAMC,EAAOC,GACtB,aAEA,IAEIC,EAFuC,oBAAfC,YAAqD,oBAAhBC,aAAsD,oBAAhBC,YAErE,aAAe,QAE7CC,KAIJ,SAASC,EAAYC,EAAQC,GACzBR,EAAcS,KAAKC,KAAM,eAAiBH,GAC1CG,KAAKC,MAAQ,KACbD,KAAKE,YAAcL,EACnBG,KAAKG,aAAeL,EACpBE,KAAKI,QA4CT,OAnDAT,EAAMU,MAAQ,OAUdhB,EAAMiB,SAASV,EAAaN,GAE5BM,EAAYW,UAAUC,aAAe,SAAUC,GAC3CT,KAAKI,KAAOK,EAAML,KACC,OAAfJ,KAAKC,OACLD,KAAKU,cAETV,KAAKC,MAAMU,KAAKtB,EAAMuB,YAAYrB,EAAYkB,EAAMI,OAAO,IAE/DjB,EAAYW,UAAUO,MAAQ,WAC1BxB,EAAciB,UAAUO,MAAMf,KAAKC,MAChB,OAAfA,KAAKC,OACLD,KAAKU,cAETV,KAAKC,MAAMU,SAAS,IAExBf,EAAYW,UAAUQ,QAAU,WAC5BzB,EAAciB,UAAUQ,QAAQhB,KAAKC,MACrCA,KAAKC,MAAQ,MAEjBL,EAAYW,UAAUG,YAAc,WAChCV,KAAKC,MAAQ,IAAIb,EAAKY,KAAKE,cACvBc,KAAK,EACLC,MAAOjB,KAAKG,aAAac,QAAU,IAEvC,IAAIC,EAAOlB,KACXA,KAAKC,MAAMkB,OAAS,SAAUN,GAC1BK,EAAKP,MACDE,KAAMA,EACNT,KAAMc,EAAKd,SAKvBT,EAAMyB,eAAiB,SAAUC,GAC7B,OAAO,IAAIzB,EAAY,UAAWyB,IAEtC1B,EAAM2B,iBAAmB,WACrB,OAAO,IAAI1B,EAAY,eAGpBD","file":"../flate.js","sourcesContent":["define([\n    'skylark-pako',\n    './utils',\n    './stream/GenericWorker'\n], function (pako, utils, GenericWorker) {\n    'use strict';\n\n    var USE_TYPEDARRAY = typeof Uint8Array !== 'undefined' && typeof Uint16Array !== 'undefined' && typeof Uint32Array !== 'undefined';\n\n    var ARRAY_TYPE = USE_TYPEDARRAY ? 'uint8array' : 'array';\n\n    var flate = {};\n\n    flate.magic = '\\b\\0';\n\n    function FlateWorker(action, options) {\n        GenericWorker.call(this, 'FlateWorker/' + action);\n        this._pako = null;\n        this._pakoAction = action;\n        this._pakoOptions = options;\n        this.meta = {};\n    }\n\n    utils.inherits(FlateWorker, GenericWorker);\n\n    FlateWorker.prototype.processChunk = function (chunk) {\n        this.meta = chunk.meta;\n        if (this._pako === null) {\n            this._createPako();\n        }\n        this._pako.push(utils.transformTo(ARRAY_TYPE, chunk.data), false);\n    };\n    FlateWorker.prototype.flush = function () {\n        GenericWorker.prototype.flush.call(this);\n        if (this._pako === null) {\n            this._createPako();\n        }\n        this._pako.push([], true);\n    };\n    FlateWorker.prototype.cleanUp = function () {\n        GenericWorker.prototype.cleanUp.call(this);\n        this._pako = null;\n    };\n    FlateWorker.prototype._createPako = function () {\n        this._pako = new pako[this._pakoAction]({\n            raw: true,\n            level: this._pakoOptions.level || -1\n        });\n        var self = this;\n        this._pako.onData = function (data) {\n            self.push({\n                data: data,\n                meta: self.meta\n            });\n        };\n    };\n\n    flate.compressWorker = function (compressionOptions) {\n        return new FlateWorker(\"Deflate\", compressionOptions);\n    };\n    flate.uncompressWorker = function () {\n        return new FlateWorker(\"Inflate\", {});\n    };\n\n    return flate;\n});"]}